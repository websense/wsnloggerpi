#!/bin/bash

### BEGIN INIT INFO
# Provides:          LoraWanGate
# Required-Start:    
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stops Logging the LoraWAN GateWay
# Description:       Start/stops the HeatController
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR=/home/pi/wsnloggerpi
PYTHON=/usr/bin/python3
DAEMON='/usr/bin/python3 /home/pi/wsnloggerpi/usb2files.py'
DAEMON_NAME=gatewaylogger
DATABASE=$DIR/uwafarmdatabase.db
DBSCHEMA=$DIR/simpleschema.txt #in case we need to create a DB
LOG=$DIR/wsnloggerpi/mylog.txt
#FILE=$(ls -t /home/pi/wsnloggerpi/data/out-*.txt|head -1)

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=pi

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

. /lib/lsb/init-functions

do_start () {
    log_daemon_msg "1Starting system $DAEMON_NAME daemon"
    if [ ! -f $DATABASE ] ; then
        echo "$DATABASE not found so will create a new one" >> $LOG
        sqlite3 $DATABASE < $DBSCHEMA
        chmod 775 $DATABASE
        chown pi:pi $DATABASE
    fi
    log_daemon_msg "2After DB creation"

    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --exec $DAEMON 
    #$DATABASE $FILE
    log_end_msg $?
}
do_stop () {
    log_daemon_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    log_end_msg $?
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;
    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0

